<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>126, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f6GB1XVhYftBAAAAAElFTkSuQmCC
</value>
  </data>
</root>